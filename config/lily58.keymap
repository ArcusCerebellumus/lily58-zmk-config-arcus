/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        qwt_combo {
            bindings = <&qm_wt>;
            key-positions = <0 1>;
        };

        toggle_ext_power {
            bindings = <&ext_power EP_TOG>;
            key-positions = <8 9>;
        };
    };

    macros {
        qm_wt: quake_mode_windows_terminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp GRAVE>,
                <&macro_wait_time 1>,
                <&macro_release>,
                <&kp GRAVE &kp LEFT_GUI>;

            label = "QUAKE_MODE_WINDOWS_TERMINAL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESCAPE        &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                         &kp N6  &kp N7  &kp N8             &kp N9   &kp N0    &kp BACKSPACE
&kp TAB           &kp Q   &kp W   &kp E         &kp R         &kp T                          &kp Y   &kp U   &kp I              &kp O    &kp P     &kp EQUAL
&kp LEFT_SHIFT    &kp A   &kp S   &kp D         &kp F         &kp G                          &kp H   &kp J   &kp K              &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X   &kp C         &kp V         &kp B   &kp LBKT     &kp RBKT  &kp N   &kp M   &kp COMMA          &kp DOT  &kp FSLH  &kp BACKSLASH
                                  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp RET   &mo 2   &mo 3   &kp RIGHT_CONTROL
            >;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp GRAVE        &none        &none     &kp RA(F4)  &none        &kp CAPSLOCK                    &kp DELETE     &none           &kp LEFT_BRACE        &kp RIGHT_BRACE        &none         &kp BACKSPACE
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET                       &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS     &kp PLUS
&trans           &kp EXCL     &kp AT    &kp HASH    &kp DOLLAR   &kp PRCNT                       &none          &kp UNDERSCORE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON     &kp SINGLE_QUOTE
&none            &none        &none     &none       &none        &none         &none     &none   &none          &kp MINUS       &kp LESS_THAN         &kp GREATER_THAN       &kp QUESTION  &kp PIPE
                                        &trans      &trans       &trans        &trans    &trans  &trans         &trans          &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1  &kp F2      &kp F3        &kp F4        &kp F5        &kp F6                          &kp F7    &kp F8       &kp F9         &kp F10    &kp F11  &kp F12
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                    &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END    &none    &kp KP_PLUS
&trans  &none       &none         &none         &none         &none                           &kp LEFT  &kp DOWN     &kp UP         &kp RIGHT  &none    &kp KP_MINUS
&trans  &none       &none         &none         &none         &none         &none     &none   &none     &none        &none          &none      &none    &studio_unlock
                                  &trans        &trans        &trans        &trans    &trans  &trans    &trans       &trans
            >;
        };

        mouse_layer {
            bindings = <
&none   &none  &none  &none   &none      &none                        &none           &none           &none         &none            &none  &none
&none   &none  &none  &none   &none      &none                        &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none  &none
&trans  &none  &none  &none   &mkp LCLK  &mkp RCLK                    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none  &none
&none   &none  &none  &none   &none      &none      &none     &none   &none           &none           &none         &none            &none  &none
                      &trans  &trans     &trans     &trans    &trans  &trans          &trans          &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
